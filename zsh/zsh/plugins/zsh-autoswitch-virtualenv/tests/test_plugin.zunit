#!/usr/bin/env zunit

@setup {
    if [[ ! -d "$HOME/.virtualenvs/foobar/" ]]; then
        echo "Creating test virtualenv"
        run virtualenv "$HOME/.virtualenvs/foobar" --python=python3
    fi
    unset VIRTUAL_ENV
    unset AUTOSWITCH_MESSAGE_FORMAT
    PYTHON_VERSION="$(python3 --version)"

    LANG=".UTF-8"
}

@test 'disabled if python not in path' {
    # Fake type failing on checking python
    function type {
      if [[ "$1" == "python" ]]; then
        return 1;
      fi
    }

    # use run the first time to capture output
    run load ../autoswitch_virtualenv.plugin.zsh

    assert "$lines[1]" same_as "WARNING: python binary not found on PATH."
    assert "$lines[2]" same_as "zsh-autoswitch-virtualenv plugin will be disabled."

    # use load the next time to check its loaded into hooks correctly
    load ../autoswitch_virtualenv.plugin.zsh

    assert '_autoswitch_startup' not_in $precmd_functions
}

@test 'enabled correctly' {
  function type {
    return 0
  }

  # use run the first time to capture output
  run load ../autoswitch_virtualenv.plugin.zsh

  assert "$output" is_empty

  # use load the next time to check its loaded into hooks correctly
  load ../autoswitch_virtualenv.plugin.zsh

  assert $output is_empty
  assert '_autoswitch_startup' in $precmd_functions
}

@test 'correct version exported' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_virtualenv.plugin.zsh

    git_version="$(git tag --list | sort -V | tail -1)"
    git tag --list

    assert "$AUTOSWITCH_VERSION" is_not_empty
    assert "$AUTOSWITCH_VERSION" same_as "$git_version"
}


@test 'plugin - does nothing if switching to directory without .venv' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_virtualenv.plugin.zsh

    TEMP_DIR="$(mktemp -d)"

    run cd "$TEMP_DIR"

    assert $status equals 0
    assert "$output" is_empty
}

@test 'plugin - switches env when .venv found' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_virtualenv.plugin.zsh
    # zsh-hook precmd does not seem to work correctly in tests
    # so we need to manually enable the plugin
    enable_autoswitch_virtualenv

    TEMP_DIR="$(mktemp -d)"
    echo "foobar" > "$TEMP_DIR/.venv"
    chmod 600 "$TEMP_DIR/.venv"

    run cd "$TEMP_DIR"

    assert $status equals 0
    assert "$output" same_as "Switching virtualenv: \e[1m\e[35mfoobar\e[0m \e[32m[üêç$PYTHON_VERSION]\e[0m"

    mkdir "$TEMP_DIR/foo"

    # switches even in project subdirectories
    run cd "$TEMP_DIR/foo"

    assert $status equals 0
    assert "$output" same_as "Switching virtualenv: \e[1m\e[35mfoobar\e[0m \e[32m[üêç$PYTHON_VERSION]\e[0m"
}


@test 'plugin - check randstr' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_virtualenv.plugin.zsh

    # check that $(randstr n) returns a string of length n
    assert "${#$(randstr)}" equals 4

    assert "$(randstr)" different_to "$(randstr)"
}
